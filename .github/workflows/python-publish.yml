name: Python Publish (pypi)
on:
  release:
    types: [created]
  push:
    branches: [main]

env:
  POETRY_VERSION: "1.8.3"
  PYTHON_VERSION: "3.12"

jobs:
  publish:
    name: Upload release to PyPI
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/gfmrag
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
            virtualenvs-create: true
            virtualenvs-in-project: true
            installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
        #----------------------------------------------

      - name: Export Publication Version
        run: echo "version=`poetry version --short`" >> $GITHUB_OUTPUT

      - name: Build Distributable
        shell: bash
        run: poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true
          verbose: true
